1. mkdir myNewProject
2. cd myNewProject

OPTIONAL: If you want to create this full stack app in a git repository do the following:

git initializes

/adds a .git hidden directory and initializes 
root folder as a local repo

echo node_modules/ > .gitignore

//creates a .gitignore file in the app's root that will ignore all node_modules

3. mkdir server
4. cd server

5. Mac: touch server.js

6. npm install express
7. npm install mongoose
7. npm intall cors

Then, within the server.js add the following code:

const express = require('express');
const app = express();
const port = 8000;
    
app.listen(port, () => console.log(`Listening on port: ${port}`) );

8. nodemon server.js



Let's create our modularized project structure by making four more folders within server folder that are called "config", "controllers", "models" and "routes".

This is how we create the project structure for our backend. Now, let's create our React project via create-react-app. Since React is used for the client side code, we can call our project "client". Make sure you are in the root folder level for your project.

8. cd ..
9. npx create-react-app client
10. npm i axios @reach/router --legacy-peer-deps

Now that you have your React project built, you will be running two different servers: your front end React server with live reloading and your Express server.






